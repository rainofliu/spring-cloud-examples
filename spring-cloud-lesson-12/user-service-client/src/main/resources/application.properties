# \u7528\u6237Ribbon\u5BA2\u6237\u7AEF\u5E94\u7528
# spring.application.name=user-service-client
# \u670D\u52A1\u7AEF\u53E3
server.port=8080

management.security.enabled=false

# \u670D\u52A1\u63D0\u4F9B\u8005\u7684serviceId
 service.provider.app.name=user-service-provider
# \u63D0\u4F9B\u65B9\u670D\u52A1\u4E3B\u673A
service.provider.app.host=localhost
# \u63D0\u4F9B\u65B9\u670D\u52A1\u7AEF\u53E3
 service.provider.app.port=9090

# \u5B9A\u4E49user-service-provider  Ribbon\u7684 \u670D\u52A1\u5668\u5730\u5740
# \u4E3ARibbonBalancerClient\u63D0\u4F9B\u670D\u52A1\u5217\u8868
#user-service-provider.ribbon.listOfServers=\
#  http://${service.provider.app.host}:${service.provider.app.port}

## \u6FC0\u6D3B Eureka Client
#eureka.client.enabled = true

# \u914D\u7F6E\u81EA\u5B9A\u4E49IPing
user-service-provider.ribbon.NFLoadBalancerPingClassName=\
  com.segmentfault.spring.cloud.lesson12.user.ribbon.client.ping.MyPing

## \u914D\u7F6E @FeignClient(name = "${user.service.name}") \u4E2D\u7684\u5360\u4F4D\u7B26
## user.service.name \u5B9E\u9645\u9700\u8981\u6307\u5B9A UserService \u63A5\u53E3\u7684\u63D0\u4F9B\u65B9
## \u4E5F\u5C31\u662F user-service-provider ,\u53EF\u4EE5\u4F7F\u7528${service.provider.app.name}\u66FF\u6362
# user.service.name=${service.provider.app.name}

## Spring Cloud Eureka \u5BA2\u6237\u7AEF \u6CE8\u518C\u5230 Eureka \u670D\u52A1\u5668
# eureka.client.serviceUrl.defaultZone = http://localhost:10000/eureka

# Kafka\u751F\u4EA7\u8005\u914D\u7F6E
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=sf-group
spring.kafka.consumer.client-id=user-service-client

# \u751F\u4EA7\u8005 \u503C\u7684\u5E8F\u5217\u5316
spring.kafka.producer.valueSerializer =com.segmentfault.spring.cloud.lesson12.user.service.client.serializer.ObjectSerializer

